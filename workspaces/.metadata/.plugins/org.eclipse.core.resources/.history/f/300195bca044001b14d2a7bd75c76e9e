package com.ecommerce.shopping.app.controller;

import java.util.Collections;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ecommerce.shopping.app.model.CustomerLogins;
import com.ecommerce.shopping.app.model.Customers;
import com.ecommerce.shopping.app.model.Status;
import com.ecommerce.shopping.app.model.Users;
import com.ecommerce.shopping.app.service.CustomerService;

@Controller
//@RequestMapping("/customer")
public class CustomerController {

	@Autowired
	CustomerService customerService;
	
	@GetMapping("/view")
	public List<Customers> ViewAllCustoemrs(){
		return customerService.getAllCustomer();
		
	}
	
	@PostMapping("/addcustomer")
	public Customers AddNewCustomer(@RequestBody Customers customer) {
		return customerService.AddNewCustomer(customer);
	}
	
//	 @GetMapping("/login")
//	    public Map<String, Object> user(@AuthenticationPrincipal OAuth2User principal) {
//	        return Collections.singletonMap("name", principal.getAttribute("name"));
//	    }
	 
	 //**************************************from MVC controller*************
	 
	 @Autowired
		CustomerService custSrvice;
		
		 @GetMapping("/login")
		    public Map<String, Object> user(@AuthenticationPrincipal OAuth2User principal) {
		        return Collections.singletonMap("name", principal.getAttribute("name"));
		    }
		 
		@GetMapping("")
		public String viewHomePage() {
			return "home";
			
		}
		
		@GetMapping("/list_users")
		public String ViewUsersList() {
			return "user";
		}
		
		@GetMapping("/users")
		public String listUsers(Model model) {
		    List<Customers> listUsers = custSrvice.getAllCustomer();
		    model.addAttribute("listUsers", listUsers);
		     
		    return "users";
		}
		
		@GetMapping("/register")
		public String ShowSignUpForm(Model model) {
			model.addAttribute("user", new Users());
			
			return "signup_form";
		}
		
		@PostMapping("/process_register")
		public String Completeregistration(Users user) {
			
			
			
			System.out.println(user.toString());
			Customers customer= new Customers();
			customer.setCustomeremailid(user.getCustomeremailid());
			customer.setFirstname(user.getFirstname());
			customer.setLastname(user.getLastname());
			customer.setDateofbirth(user.getDateofbirth());
			customer.setContactnumber(user.getContactnumber());
			customer.setAddressLine1(user.getAddressLine1());
			customer.setAddressLine2(user.getAddressLine2());
			customer.setZipcode(user.getZipcode());
			customer.setState(user.getState());
			customer.setCity(user.getCity());
			customer.setSecretquestion(user.getSecretquestion());
			customer.setSecretquestionanswer(user.getSecretquestionanswer());
			customer.setStatus(Status.ACTIVE);
			
			customer=custSrvice.AddNewCustomer(customer);
			BCryptPasswordEncoder encoder=new  BCryptPasswordEncoder();		
			CustomerLogins custlogin=new CustomerLogins();
			custlogin.setCustomer(customer);
			custlogin.setCustomerusername(user.getCustomerusername());
			custlogin.setPassword(encoder.encode(user.getPassword()));
			
			custlogin=custSrvice.SaveCustomerLogins(custlogin);
			System.out.println(custlogin.toString());
			System.out.println(customer.getCustomerid());
			return "registered";
		}
	 
	 //***************************************End MVC Controller************
}
